import React from 'react';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar, ScatterChart, Scatter } from 'recharts';

const HangerOptimization = () => {
  // 优化数据 - 吊弦数量与系统性能指标
  const optimizationData = [
    { count: 6, straightness: 0.9901, complexity: 0.30, metric: 0.4931 },
    { count: 8, straightness: 0.9956, complexity: 0.40, metric: 0.5396 },
    { count: 10, straightness: 0.9975, complexity: 0.50, metric: 0.5475 },
    { count: 12, straightness: 0.9985, complexity: 0.60, metric: 0.5485 },
    { count: 14, straightness: 0.9989, complexity: 0.70, metric: 0.5389 },
    { count: 16, straightness: 0.9992, complexity: 0.80, metric: 0.5272 },
    { count: 18, straightness: 0.9994, complexity: 0.90, metric: 0.5144 },
    { count: 20, straightness: 0.9995, complexity: 1.00, metric: 0.4995 }
  ];
  
  // 找出最优点
  const optimalPoint = optimizationData.reduce((max, item) => 
    item.metric > max.metric ? item : max, optimizationData[0]);
  
  // 吊弦布局可视化数据
  const generateHangerLayoutData = (hangerCount) => {
    // 系统参数
    const span = 60;
    const heightDiff = 1.8;
    const messengerTension = 25000;
    const messengerDensity = 7800;
    const messengerArea = 150e-6;
    const g = 9.8;
    
    // 计算承力索参数
    const messengerWeight = messengerDensity * messengerArea * g;
    const messengerParam = messengerTension / messengerWeight;
    
    // 计算吊弦位置和长度
    const hangers = [];
    for (let i = 1; i <= hangerCount; i++) {
      const x = -span/2 + i * span/(hangerCount + 1);
      const y = messengerParam * (Math.cosh(x/messengerParam) - 1) + heightDiff;
      
      hangers.push({ x, y });
    }
    
    return hangers;
  };
  
  // 生成三种不同吊弦数量的布局
  const layouts = {
    low: generateHangerLayoutData(8),
    optimal: generateHangerLayoutData(12),
    high: generateHangerLayoutData(18)
  };
  
  return (
    <div className="flex flex-col w-full p-4 bg-white rounded-lg shadow">
      <h2 className="text-xl font-bold text-center mb-4">吊弦数量优化分析</h2>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {/* 左侧: 优化指标图 */}
        <div className="flex flex-col">
          <h3 className="text-lg font-semibold mb-2">吊弦数量与系统性能关系</h3>
          <div className="h-64 mb-4">
            <ResponsiveContainer width="100%" height="100%">
              <LineChart
                data={optimizationData}
                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}
              >
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis 
                  dataKey="count" 
                  label={{ value: '吊弦数量', position: 'insideBottom', offset: -5 }}
                />
                <YAxis 
                  label={{ value: '性能指标', angle: -90, position: 'insideLeft' }} 
                  domain={[0, 1]}
                />
                <Tooltip formatter={(value) => value.toFixed(4)} />
                <Legend />
                <Line 
                  type="monotone" 
                  dataKey="straightness" 
                  stroke="#3498db" 
                  strokeWidth={2} 
                  name="平直度"
                  dot={{ r: 4 }}
                />
                <Line 
                  type="monotone" 
                  dataKey="complexity" 
                  stroke="#e74c3c" 
                  strokeWidth={2} 
                  name="复杂度"
                  dot={{ r: 4 }}
                />
                <Line 
                  type="monotone" 
                  dataKey="metric" 
                  stroke="#2ecc71" 
                  strokeWidth={3} 
                  name="综合指标"
                  dot={{ r: 5 }}
                />
                
                {/* 标记最优点 */}
                <Scatter 
                  data={[optimalPoint]} 
                  fill="#8e44ad" 
                  name="最优点"
                >
                  <Scatter />
                </Scatter>
              </LineChart>
            </ResponsiveContainer>
          </div>
          
          <div className="bg-purple-50 p-3 rounded-lg shadow-sm mb-3">
            <div className="text-sm text-gray-500">最优吊弦数量</div>
            <div className="text-lg font-semibold">{optimalPoint.count} 根</div>
            <div className="text-sm">平直度: {(optimalPoint.straightness * 100).toFixed(2)}%</div>
            <div className="text-sm">综合指标: {optimalPoint.metric.toFixed(4)}</div>
          </div>
          
          <div className="bg-gray-100 p-3 rounded-lg text-sm">
            <p className="mb-1"><strong>优化说明:</strong></p>
            <p>综合指标 = w₁·平直度 - w₂·复杂度</p>
            <p>w₁=0.7, w₂=0.3 (权重系数)</p>
            <p>吊弦数量增加时，平直度提升但边际效应递减</p>
          </div>
        </div>
        
        {/* 右侧: 不同吊弦数量下的系统形态比较 */}
        <div className="flex flex-col">
          <h3 className="text-lg font-semibold mb-2">不同吊弦数量布局比较</h3>
          <div className="h-64 mb-4">
            <ResponsiveContainer width="100%" height="100%">
              <ScatterChart
                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}
              >
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis 
                  type="number" 
                  dataKey="x" 
                  name="位置" 
                  domain={[-30, 30]} 
                  label={{ value: '水平位置 (m)', position: 'insideBottom', offset: -5 }}
                />
                <YAxis 
                  type="number" 
                  dataKey="y" 
                  name="长度" 
                  domain={[0, 2.5]} 
                  label={{ value: '吊弦长度 (m)', angle: -90, position: 'insideLeft' }}
                />
                <Tooltip formatter={(value) => value.toFixed(3) + ' m'} />
                <Legend />
                <Scatter 
                  name="低密度 (8根)" 
                  data={layouts.low} 
                  fill="#e74c3c" 
                  line={{ stroke: '#e74c3c', strokeWidth: 1 }}
                  shape="circle"
                />
                <Scatter 
                  name="最优密度 (12根)" 
                  data={layouts.optimal} 
                  fill="#2ecc71" 
                  line={{ stroke: '#2ecc71', strokeWidth: 1 }}
                  shape="circle"
                />
                <Scatter 
                  name="高密度 (18根)" 
                  data={layouts.high} 
                  fill="#3498db" 
                  line={{ stroke: '#3498db', strokeWidth: 1 }}
                  shape="circle"
                />
              </ScatterChart>
            </ResponsiveContainer>
          </div>
          
          <div className="grid grid-cols-3 gap-2 mb-3">
            <div className="bg-red-50 p-2 rounded-lg text-center">
              <div className="text-xs font-semibold">8根</div>
              <div className="text-xs">间距: 6.7m</div>
            </div>
            <div className="bg-green-50 p-2 rounded-lg text-center">
              <div className="text-xs font-semibold">12根 (最优)</div>
              <div className="text-xs">间距: 4.6m</div>
            </div>
            <div className="bg-blue-50 p-2 rounded-lg text-center">
              <div className="text-xs font-semibold">18根</div>
              <div className="text-xs">间距: 3.2m</div>
            </div>
          </div>
          
          <div className="bg-gray-100 p-3 rounded-lg text-sm">
            <p className="mb-1"><strong>分析结论:</strong></p>
            <p>• 吊弦数量过少 (＜10)：接触线平直度不足</p>
            <p>• 吊弦数量过多 (＞16)：边际效益递减，成本增加</p>
            <p>• 最优吊弦数量为12-14根 (50-60m跨距)</p>
            <p>• 可根据速度要求适当调整</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default HangerOptimization;
